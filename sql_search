import os
import json
import pandas as pd
import re
from collections import Counter
from openpyxl import load_workbook

# Define the directory containing the notebooks
notebook_dir = "path_to_your_notebooks"

# List to store extracted SQL queries
found_queries = []
variable_frequencies = Counter()

# Function to extract SQL queries from a notebook cell
def extract_sql_from_cell(cell_source):
    """Extract SQL queries from a cell."""
    queries = []
    lines = cell_source.split("\n")
    sql_query = []
    inside_query = False
    
    for line in lines:
        if "SELECT" in line.upper():
            inside_query = True
        if inside_query:
            sql_query.append(line)
        if ";" in line:
            inside_query = False
            query_text = " ".join(sql_query).strip()
            queries.append(query_text)
            sql_query = []
            extract_variables_from_query(query_text)  # Extract variables
    
    return queries

# Function to extract table names from SQL queries
def extract_variables_from_query(query):
    """Extract variables like table names, column names, or placeholders."""
    tables = re.findall(r"FROM\s+([a-zA-Z_][a-zA-Z0-9_\.]*)", query, re.IGNORECASE)
    for table in tables:
        variable_frequencies[table] += 1

# Iterate through all notebooks in the directory
for root, _, files in os.walk(notebook_dir):
    for file in files:
        if file.endswith(".ipynb"):
            notebook_path = os.path.join(root, file)
            with open(notebook_path, "r", encoding="utf-8") as f:
                notebook_data = json.load(f)
                # Search through cells in the notebook
                for cell in notebook_data.get("cells", []):
                    if cell.get("cell_type") == "code":
                        cell_source = "".join(cell.get("source", ""))
                        queries = extract_sql_from_cell(cell_source)
                        for query in queries:
                            table_name = re.search(r"FROM\s+([a-zA-Z_][a-zA-Z0-9_\.]*)", query, re.IGNORECASE)
                            table_name = table_name.group(1) if table_name else "Unknown"
                            found_queries.append({"notebook": file, "table": table_name, "query": query})

# Convert the found queries into a DataFrame and save to an Excel file with separate tabs
if found_queries:
    output_excel_path = "extracted_sql_queries.xlsx"
    with pd.ExcelWriter(output_excel_path, engine="openpyxl") as writer:
        df_queries = pd.DataFrame(found_queries, columns=["notebook", "table", "query"])
        df_queries.to_excel(writer, sheet_name="SQL Queries", index=False)
        
        df_frequencies = pd.DataFrame(variable_frequencies.items(), columns=["variable", "count"])
        df_frequencies.to_excel(writer, sheet_name="Variable Frequencies", index=False)
    
    print(f"Extracted SQL queries and variable frequencies saved to {output_excel_path}")
else:
    print("No SQL queries found in the notebooks.")
